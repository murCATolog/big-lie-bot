// —ñ–º–ø–æ—Ä—Ç—É—î–º–æ –∫–ª–∞—Å Telegraf —ñ–∑ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ telegraf
import { Telegraf, Markup } from "telegraf";

// —ñ–º–ø–æ—Ä—Ç–º—É—î–º–æ –º–æ–¥—É–ª—å fs –∑ NodeJS –¥–ª—è —Ä–æ–±–æ—Ç–∏ —Ñ–∞–π–ª–æ–≤–æ—é —Å–∏—Å—Ç–µ–º–æ—é –∞—Å–∏–Ω—Ö–æ—Ä–Ω–Ω–æ
import fs from 'fs/promises';

// —à–ª—è—Ö –¥–æ JSON —Ñ–∞–π–ª—ñ–≤
const USERS_ID_JSON = './users_id.json';
const QUOTE_JSON = './quotes.json';

// —Å—Ç–≤–æ—Ä—é—î–º–æ –∫–ª–∞—Å –±–æ—Ç
class QuoteBot extends Telegraf {
  constructor(token) {
    super(token); // —Ç–æ–∫–µ–Ω –±–æ—Ç—É (–º–µ—Ç–æ–¥ —É—Å–ø–∞–¥–∫–æ–≤–∞–Ω–∏–π –∑ –∫–ª–∞—Å—É Telegraf)
    this.activeUsers = [];    // –º–∞—Å–∏–≤ —é–∑–µ—Ä—ñ–≤, —è–∫—ñ –ø—ñ–¥–ø–∏—Å–∞–ª–∏—Å—è –Ω–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–≤—Ç–æ–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    this.quotes = [];     // —Ç—É—Ç –æ–± º—î–∫—Ç –∑ —Ü–∏—Ç–∞—Ç–∞–º–∏
    this.quoteIndex = 0;    // —ñ–Ω–¥–µ–∫—Å –ø–æ—á–∞—Ç–∫–æ–≤–æ—ó —Ü–∏—Ç–∞—Ç–∏

    // —ñ–Ω—Ñ–∞ –ø—Ä–æ –∞–∫—Ç–∏–≤–∞—Ü—ñ—é –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –∞–≤—Ç–æ—Ü–∏—Ç–∞—Ç
    this.activeGen = true;  // —Å—Ç–∞–Ω –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏—Ö —Ü–∏—Ç–∞—Ç
    this.bufferDate = null; // –±—É—Ñ–µ—Ä–Ω–∞ –¥–∞—Ç–∞ =)

    // –ö–ù–û–ü–ö–ò –ë–û–¢–ê
    // –Ω–∞–∑–≤–∏ –∫–Ω–æ–ø–æ–∫
    this.keysNames = {
      generate: '–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Ü–∏—Ç–∞—Ç—É. –ü—Ä—ñ –º–Ω—î!',
      on: '–ü—Ä–∏—Å–∏–ª–∞—Ç–∏ 1 —Ü–∏—Ç–∞—Ç—É —â–æ–¥–Ω—è',
      off: '–ù–µ –ø—Ä–∏—Å–∏–ª–∞—Ç–∏ —Ü–∏—Ç–∞—Ç—É —â–æ–¥–Ω—è',
    };
  };

    // –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è –º–µ–Ω—é –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ on/off
  getButtonsMenu() {
    const startKeys = Markup.inlineKeyboard([
      [Markup.button.callback(this.keysNames.generate, 'generate')],
      [Markup.button.callback(this.keysNames.on, 'on')]
    ]);
    const stopKeys = Markup.inlineKeyboard([
      [Markup.button.callback(this.keysNames.generate, 'generate')],
      [Markup.button.callback(this.keysNames.off, 'off')]
    ]);
    return this.activeGen ? stopKeys : startKeys;
  };

  // –û–ë–†–û–ë–ö–ê –í–°–Ü–• –ü–û–î–Ü–ô
  eventKeys() {
    // —ñ–Ω—Ñ–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—ñ –±–æ—Ç–∞
    this.start(async (context) => {
      // –∑–∞–ø—É—Å–∫ –º–µ—Ç–æ–¥–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è id —á–∞—Ç—É –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ
      this.chatId = context.chat.id;
      await this.getUsers(context);
      try {
        await context.replyWithPhoto({ source: './img/main.jpg' });
      } catch (error) {
        console.log(error);
        context.reply('–£–ø—Å! –ß–æ–º—É—Å—å –∫–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–∞—Å—å!üò¢\n–ü–æ–≤—ñ–¥–æ–º –ø—Ä–æ –ø–æ–º–∏–ª–∫—É: \n@murCATolog');
      }
      await context.reply(
        '–î–æ–æ–æ–æ–æ–æ–æ–±—Ä–∏–π –≤–µ—á—ñ—Ä, —Ö–ª–æ–ø—Ü—ñ!\n–Ø –±—É–¥—É –ø—Ä–∏—Å–∏–ª–∞—Ç–∏ —Ç–æ–±—ñ —Ñ—Ä–∞–∑–∏ —à–∏—Ä–æ–∫–æ–≤—ñ–¥–æ–º–∏—Ö —É –≤—É–∑—å–∫–∏—Ö –∫–æ–ª–∞—Ö —à–∞—Ö—Ä–∞—ó–≤\n(—ñ –Ω–µ —Ç—ñ–ª—å–∫–∏).\n–¢–∏ –º–æ–∂–µ—à –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Ü–∏—Ç–∞—Ç–∏ –æ–¥—Ä–∞–∑—É –∞–±–æ –∂\n–Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω—É –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é —Ä–∞–∑ –Ω–∞ –¥–æ–±—É.\n–Ñ –ø–∏—Ç–∞–Ω–Ω—è? –ü–∏—à–∏: @murCATolog',
        this.getButtonsMenu()
      );
    });

    // –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ü–∏—Ç–∞—Ç–∏ –æ–¥—Ä–∞–∑—É
    this.action('generate', async (context) => {
      context.reply(await this.getQuote(), this.getButtonsMenu());
    });

    // –≤–∏–º–∏–∫–∞–Ω–Ω—è –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó
    this.action('off', async (context) => {
      this.activeGen = false;
      this.activeUsers = this.activeUsers.filter(elementId => elementId !== context.chat.id);
      await fs.writeFile(USERS_ID_JSON, JSON.stringify(this.activeUsers, null, 2)); // –∑–∞–ø–∏—Å—É—î–º–æ –æ–±'—î–∫—Ç —É —Ñ–∞–π–ª
      context.reply('–ì–æ–ª–æ–≤—î—à–∫–∞ –í–ò–ú–ö–ù–£–í –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω—É –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é —Ü–∏—Ç–∞—Ç. –¢–∏ –≤—á–∏–Ω–∏–≤ —è–∫ –ø...', this.getButtonsMenu());
    });

    // –≤–º–∏–∫–∞–Ω–Ω—è –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó
    this.action('on', async (context) => {
        this.activeGen = true;
        await this.getUsers(context);  // –¥–æ–¥–∞—î–º–æ id —á–∞—Ç—É
        context.reply('–ü–æ—Ä—è–¥–æ—á–Ω–æ! –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ü–∏—Ç–∞—Ç –£–í–Ü–ú–ö–ù–ï–ù–ê!', this.getButtonsMenu());
      });
  };

  //–ú–ï–¢–û–î–ò, –©–û –ü–†–ê–¶–Æ–Æ–¢–¨ –ó JSON
  // –æ—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ —é–∑–µ—Ä—ñ–≤ —ñ–∑ user_id.json —ñ –∑–∞–ø–∏—Å—É—î–º–æ –Ω–æ–≤—ñ id
  async getUsers(context = null) {
    try{
      const readUsersFile = await fs.readFile(USERS_ID_JSON, 'utf-8');
      this.activeUsers = JSON.parse(readUsersFile); // –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ json —É –æ–±'—î–∫—Ç
      if (context && !this.activeUsers.includes(context.chat.id)) {  // —Ñ—ñ–ª—å—Ç—Ä –≤–∂–µ —ñ—Å—Ç–Ω—É—é—á–∏—Ö id
        this.activeUsers.push(context.chat.id); // –¥–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π id —É –æ–±'—î–∫—Ç
        await fs.writeFile(USERS_ID_JSON, JSON.stringify(this.activeUsers, null, 2)); // –∑–∞–ø–∏—Å—É—î–º–æ –æ–±'—î–∫—Ç —É —Ñ–∞–π–ª —ñ –∑–∞–ø–∏—Å—É—î–º–æ
      };  
    }
    catch(error){
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ —Ñ–∞–π–ª—É users_id.json:', error);
      this.activeUsers = [];  //–ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø—É—Å—Ç–∏–π –º–∞—Å–∏–≤ —É —Ä–∞–∑—ñ –ø–æ–º–∏–ª–∫–∏
    }
  };

  // –∑—á–∏—Ç—É—î–º–æ —Ü–∏—Ç–∞—Ç–∏ –∑ —Ñ–∞–π–ª—É
  async parseQuote() {
    try {
      const quotesData = await fs.readFile(QUOTE_JSON, 'utf-8');
      this.quotes = JSON.parse(quotesData);
    }
    catch(error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑—á–∏—Ç—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—É —Ü–∏—Ç–∞—Ç: ' + error);
      this.quotes = [];
    }
  };

  // –æ—Ç—Ä–∏–º—É—î–º–æ —Ü–∏—Ç–∞—Ç—É –∑ –º–∞—Å–∏–≤—É
  async getQuote() {
    try{
      await this.parseQuote();  // —á–µ–∫–∞—î–º–æ –∑—á–∏—Ç—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—É —Ü–∏—Ç–∞—Ç
      if (this.quotes.length > 0) {
        if (this.quoteIndex >= this.quotes.length) {
        this.quoteIndex = 0;  // —Å–∫–∏–¥–∞—î–º–æ —ñ–Ω–¥–µ–∫—Å, —è–∫—â–æ –≤–∏–π—à–ª–∏ –∑–∞ –º–µ–∂—ñ
        };
        let newQuote = `${this.quotes[this.quoteIndex].quote}\n‚Äî ${this.quotes[this.quoteIndex].author}`;
        this.quoteIndex++;
        return newQuote;
      } else {
        return '–°–ø–∏—Å–æ–∫ —Ü–∏—Ç–∞—Ç –ø–æ—Ä–æ–∂–Ω—ñ–π!';
      };
    }
    catch(error){
      console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ü–∏—Ç–∞—Ç–∏: ' + error);
      return '–£–ø—Å! –ß–æ–º—É—Å—å —Ü–∏—Ç–∞—Ç–∞ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–∞—Å—å!üò¢\n–ü–æ–≤—ñ–¥–æ–º –ø—Ä–æ –ø–æ–º–∏–ª–∫—É: \n@murCATolog';
    }
  };
  
  // –º–µ—Ç–æ–¥, —â–æ —Å–ª—ñ–¥–∫—É—î –∑–∞ —á–∞—Å–æ–º
  timeWatcher() {
    setInterval(async () => {
      let currnetDate = new Date().getDate();  // –ø–æ—Ç–æ—á–Ω–∞ –¥–∞—Ç–∞
      let currentHour = new Date().getHours(); // –ø–æ—Ç–æ—á–Ω–∏–π —á–∞—Å
      if(this.bufferDate == null) {
        this.bufferDate = currnetDate;
      }
      if(this.bufferDate == currnetDate && currentHour >= 10 && this.activeGen == true) {
        for(let id of this.activeUsers) { // –ø–µ—Ä–µ–±—ñ—Ä –≤—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É –∑ id —ñ –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ —ó–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
          try {
            await this.telegram.sendMessage(id, await this.getQuote());
          }
          catch {
            console.error(`–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ id ${id} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
          }
        };
        this.bufferDate = currnetDate + 1;
      };
    }, 30000);
  };

  // —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–µ—Ç–æ–¥—ñ–≤
  async init() {
    await this.getUsers(); // —á–µ–∫–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    this.eventKeys();      // –Ω–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏
    this.timeWatcher();    // –∑–∞–ø—É—Å–∫–∞—î–º–æ —Ç–∞–π–º–µ—Ä
  };
};

// –∞–Ω–æ–Ω—ñ–º–∫–∞ —Å–∞–º–æ–≤–∫–ª–∏–∫–∞—é—á–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞
(async () => {
  const BigLiesBot = new QuoteBot('7570011602:AAG9gpgzgg_MFxJBKVjFBhm99kG79_f9TTU');
  await BigLiesBot.init(); // —á–µ–∫–∞—î–º–æ –ø—ñ–¥–≥–æ—Ç–æ–≤–∫—É
  BigLiesBot.launch();     // –∑–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
})();