// —ñ–º–ø–æ—Ä—Ç—É—î–º–æ –∫–ª–∞—Å Telegraf —ñ–∑ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ telegraf
import { Telegraf, Markup } from "telegraf";
// —ñ–º–ø–æ—Ä—Ç—É—î–º–æ —Ü–∏—Ç–∞—Ç–∏ –∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª—É quotes.json —ñ NodeJS —Ä–∞–∑–æ–ø–∞—Ä—Å–∏—Ç—å –π–æ–≥–æ —è–∫ –æ–± º—î–∫—Ç
import quotes from './quotes.json' with { type: 'json' };
// '7570011602:AAG9gpgzgg_MFxJBKVjFBhm99kG79_f9TTU');
// —Å—Ç–≤–æ—Ä—é—î–º–æ –∫–ª–∞—Å –±–æ—Ç
class QuoteBot extends Telegraf {
    constructor(token) {
        super(token); // —Ç–æ–∫–µ–Ω –±–æ—Ç—É(–º–µ—Ç–æ–¥ —É—Å–ø–∞–¥–∫–æ–≤–∞–Ω–∏–π –∑ –∫–ª–∞—Å—É Telegraf)
        this.active = true;    // —Å—Ç–∞–Ω –±–æ—Ç—É
        this.quotes = quotes;   // —Ç—É—Ç –æ–± º—î–∫—Ç –∑ —Ü–∏—Ç–∞—Ç–∞–º–∏
        //–∫–Ω–æ–ø–∫–∏ –±–æ—Ç–∞
        this.startKey = Markup.keyboard(['–ó–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞', '–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Ü–∏—Ç–∞—Ç—É']).resize();
        this.stopKey = Markup.keyboard(['–ó—É–ø–∏–Ω–∏—Ç–∏ –±–æ—Ç–∞', '–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Ü–∏—Ç–∞—Ç—É']).resize();
        this.genQuoteKey = Markup.keyboard(['–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Ü–∏—Ç–∞—Ç—É']).resize();
    }
    // —Å—Ç–∞—Ä—Ç –±–æ—Ç–∞
    startBot() {
        this.start((context) => {   //–º–µ—Ç–æ–¥ start —ñ–∑ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ Telegraf
            context.reply(
                '–î–æ–æ–æ–æ–æ–æ–æ–±—Ä–∏–π –≤–µ—á—ñ—Ä, —Ö–ª–æ–ø—Ü—ñ!\n–Ø –±—É–¥—É –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –í–∞–º —Ñ—Ä–∞–∑–∏ —à–∏—Ä–æ–∫–æ–≤—ñ–¥–æ–º–∏—Ö —É –≤—É–∑—å–∫–∏—Ö –∫–æ–ª–∞—Ö —à–∞—Ö—Ä–∞—ó–≤\n(—ñ –Ω–µ —Ç—ñ–ª—å–∫–∏).\n–Ñ –ø–∏—Ç–∞–Ω–Ω—è? –ü–∏—à–∏: @murCATolog',
                this.stopKey
            );
        });
    };
    // –ª–æ–≥—ñ–∫–∞ –∫–Ω–æ–ø–æ–∫
    buttonsAction() {
        this.hears('–ó—É–ø–∏–Ω–∏—Ç–∏ –±–æ—Ç–∞', (context) => {
            this.active = false;
            context.reply('–ë–æ—Ç–∞ –∑—É–ø–∏–Ω–µ–Ω–æ.', this.startKey);
        });
        this.hears('–ó–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞', (context) => {
            this.active = true;
            context.reply('–ë–æ—Ç–∞ –∑–∞–ø—É—â–µ–Ω–æ.', this.stopKey);
        });
        this.hears('–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Ü–∏—Ç–∞—Ç—É', (context) => {
            context.reply(this.getRandomQuote(),  this.genQuoteKey);
        });

    };
    // –≥–µ–Ω–µ—Ä—É—î–º–æ —Ä–∞–Ω–¥–æ–º–Ω—ñ —Ü–∏—Ç–∞—Ç–∏
    getRandomQuote() {
        if (this.quotes.length > 0) {
            const number = Math.floor(Math.random() * this.quotes.length);
            return `${this.quotes[number].quote}\n‚Äî ${this.quotes[number].author}`; 
        } else {
            return '–£–ø—Å! –ß–æ–º—É—Å—å —Ü–∏—Ç–∞—Ç–∞ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–∞—Å—å! üò¢ \n–ü–æ–≤—ñ–¥–æ–º –º–µ–Ω–µ –ø—Ä–æ –ø–æ–º–∏–ª–∫—É: \n@murCATolog';
        };
    };
};
// —Å—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —ñ –∑–∞–ø—É—Å–∫–∞—î–º–æ –π–æ–≥–æ
const BigLiesBot = new QuoteBot('YOUR_NEW_TOKEN_HERE');

BigLiesBot.startBot();
BigLiesBot.buttonsAction();
BigLiesBot.launch();